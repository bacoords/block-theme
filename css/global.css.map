{"version":3,"sourceRoot":"","sources":["../src/scss/base/reset.scss","../src/scss/utilities/container.scss","../src/scss/abstracts/mixins.scss","../src/scss/layout/header.scss","../src/scss/layout/footer.scss","../src/scss/utilities/flow.scss","../src/scss/layout/body.scss","../src/scss/blocks/core/group.scss","../src/scss/blocks/wp-block-blockquote.scss"],"names":[],"mappings":"AAIA,qBACC,sBAED,EACC,SAED,UACC,YAED,KACC,mCAED,6BACC,cACA,eAED,6BACC,aAED,oBACC,yBCtBD,6BACC,iDC4CA,YD3CyB,KC4CzB,aD5CyB,KEH1B,UACC,aACA,8BACA,yCCHD,UACC,aACA,8BACA,yCCHA,sCACC,8CCCD,uBACC,kBAED,iBJyCA,YIxC0B,KJyC1B,aIzC0B,KAGzB,0BJqCD,YIpC2B,KJqC3B,aIrC2B,KAE1B,kFACC,oDAED,2CACC,iDAMF,uBACC,uCACA,kCACC,cACA,kBC3BH,gBAEC,sBACA,mBCHD,qBACC","file":"global.css","sourcesContent":["/*\nJosh's Custom CSS Reset\nhttps://www.joshwcomeau.com/css/custom-css-reset/\n*/\n*, *::before, *::after {\n\tbox-sizing: border-box;\n}\n* {\n\tmargin: 0;\n}\nhtml, body {\n\theight: 100%;\n}\nbody {\n\t-webkit-font-smoothing: antialiased;\n}\nimg, picture, video, canvas, svg {\n\tdisplay: block;\n\tmax-width: 100%;\n}\ninput, button, textarea, select {\n\tfont: inherit;\n}\np, h1, h2, h3, h4, h5, h6 {\n\toverflow-wrap: break-word;\n}","@use \"../abstracts/mixins.scss\";\n\n.wrapper {\n\tmax-width: var(--wp--custom--content-sizes--wide);\n\t@include mixins.margin-x(auto);\n}","/// This mixin assumes mobile-first coding, and helps you respond to different breakpoints\n/// from within each applicable selector.\n/// It pulls breakpoints from a map of breakpoints set in _variables.scss\n/// Read More : https://sass-guidelin.es/#responsive-web-design-and-breakpoints\n@mixin respond-to($breakpoint) {\n\t// Retrieves the value of the breakpoint\n\t$raw-query: map-get($breakpoints, $breakpoint);\n\n\t// If the breakpoint exists in the map\n\t@if $raw-query {\n\n\t\t$query: if(\n\t\t\ttype-of($raw-query) == 'string',\n\t\t\tunquote($raw-query),\n\t\t\tinspect($raw-query)\n\t\t);\n\n\t\t// Prints a media query based on the value\n\t\t@media (min-width: #{$query} ) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@error \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n\t\t + \"Please make sure it is defined in `$breakpoints` map.\";\n\t}\n}\n\n/// Size an element\n@mixin size($width, $height: $width) {\n\twidth: $width;\n\theight: $height;\n}\n\n/// Add left/right padding to an element\n@mixin padding-x($left, $right: $left) {\n\tpadding-left: $left;\n\tpadding-right: $right;\n}\n\n/// Add top/bottom padding to an element\n@mixin margin-y($top, $bottom: $top) {\n\tpadding-top: $top;\n\tpadding-bottom: $bottom;\n}\n\n/// Add left/right margin to an element\n@mixin margin-x($left, $right: $left) {\n\tmargin-left: $left;\n\tmargin-right: $right;\n}\n\n/// Add top/bottom margin to an element\n@mixin margin-y($top, $bottom: $top) {\n\tmargin-top: $top;\n\tmargin-bottom: $bottom;\n}\n\n/// Set font size, line height, and letter spacing\n@mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {\n\tfont-size: $font-size;\n\tline-height: $line-height;\n\tletter-spacing: $letter-spacing;\n}\n\n/// Simple fade-in animation\n@mixin fade($type: \"hide\") {\n\t@if $type == \"hide\" {\n\t\tvisibility: hidden;\n\t\topacity: 0;\n\t\ttransition: visibility 1s, opacity 1s;\n\t} @else if $type == \"show\" {\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t\ttransition: visibility 1s, opacity 1s;\n\t}\n}","@use \"../utilities/container.scss\" as *;;\n#masthead {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: var(--wp--preset--spacing--40) 0;\n\t@extend .wrapper;\n}","@use \"../utilities/container.scss\" as *;\n#colophon {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: var(--wp--preset--spacing--40) 0;\n\t@extend .wrapper;\n}",".flow {\n\t& > * + * {\n\t\tmargin-top: var(--wp--custom--block-gap, 1rem);\n\t}\n}","@use \"../utilities/flow.scss\" as *;\n@use \"../abstracts/mixins.scss\";\n#primary {\n\t.entry-header {\n\t\ttext-align: center;\n\t}\n\t& > article {\n\t\t@include mixins.margin-x(auto);\n\t}\n\t.entry-content {\n\t\t& > * {\n\t\t\t@include mixins.margin-x(auto);\n\t\t}\n\t\t& > :where(:not(.alignleft):not(.alignright):not(.alignfull)) {\n\t\t\tmax-width: var(--wp--custom--content-sizes--default);\n\t\t}\n\t\t& > :where(.alignwide) {\n\t\t\tmax-width: var(--wp--custom--content-sizes--wide);\n\t\t}\n\t}\n\t.entry-content {\n\t\t@extend .flow;\n\t}\n\t.entry-footer {\n\t\tpadding: var(--wp--preset--spacing--40);\n\t\t.edit-link {\n\t\t\tdisplay: block;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n}",".wp-block-group {\n\t// padding added for parity with the block editor\n\tpadding-bottom: 1.25em;\n\tpadding-top: 1.25em;\n}",".wp-block-blockquote {\n\tborder: 2px solid var(--wp--preset--color--primary);\n}"]}