@use "../utils";
@use "../utils/visually-hidden.scss" as *;
input,
textarea {
	transition: utils.custom("effects", "transition");
	border-radius: utils.custom("border", "radius");
	border-color: utils.custom("border", "color");
	border-style: utils.custom("border", "style");
	border-width: utils.custom("border", "width");
	padding-top: utils.custom("button", "spacing--padding--top");
	padding-right: utils.custom("button", "spacing--padding--right");
	padding-bottom: utils.custom("button", "spacing--padding--bottom");
	padding-left: utils.custom("button", "spacing--padding--left");
	&:focus {
		outline: utils.custom("forms", "focus--outline");
		border-radius: utils.custom("border--focus", "radius");
		border-color: utils.custom("border--focus", "color");
		border-style: utils.custom("border--focus", "style");
		border-width: utils.custom("border--focus", "width");
	}
}

input[type="checkbox"],
input[type="radio"] {
	accent-color: utils.preset("color", "foreground");
}

/// Accessible pseudo checkboxes with a focus state
input[type="checkbox"] {
	position: absolute;
	margin: 0 !important;
	padding: 0 !important;
	opacity: 0;
	height: 0;
	width: 0;
	pointer-events: none;
	& + label {
		position: relative;
		cursor: pointer;
		display: flex;
		line-height: 1.6;
		&::before {
			content: "";
			flex-shrink: 0;
			top: calc((1em * 1.6 - 20px) / 2);
			position: relative;
			display: inline-block;
			margin-right: 10px;
			width: 20px;
			height: 20px;
			background: transparent;
			border-radius: utils.custom("border", "radius");
			border-color: utils.custom("border", "color");
			border-style: utils.custom("border", "style");
			border-width: utils.custom("border", "width");
		}
	}
	&:checked {
		& + label {
			&::before {
				background: utils.custom("border", "color");
			}
			&::after {
				content: "";
				position: absolute;
				top: 10px;
				left: 4px;
				border-left: utils.custom("border", "width") solid
					utils.preset("color", "background");
				border-bottom: utils.custom("border", "width") solid
					utils.preset("color", "background");
				height: 6px;
				width: 13px;
				transform: rotate(-45deg);
			}
		}
	}
	&:focus,
	&:focus-visible {
		& + label {
			&:before {
				outline: utils.preset("color", "background") solid
					utils.custom("border", "width");
				box-shadow: 1px 1px 8px utils.preset("color", "secondary");
			}
		}
	}
	&:disabled {
		& + label {
			&::before {
				@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
					backdrop-filter: brightness(0.95);
				}
				border-color: transparent;
			}
		}
	}
}

/// Accessible pseudo radio buttons with a focus state
input[type="radio"] {
	position: absolute;
	margin: 0 !important;
	padding: 0 !important;
	opacity: 0;
	height: 0;
	width: 0;
	pointer-events: none;
	& + label {
		position: relative;
		cursor: pointer;
		display: flex;
		line-height: 1.6;
		&::before {
			content: "";
			flex-shrink: 0;
			top: calc((1em * 1.6 - 20px) / 2);
			position: relative;
			display: inline-block;
			margin-right: 10px;
			width: 20px;
			height: 20px;
			background: transparent;
			border-radius: 50%;
			border-color: utils.custom("border", "color");
			border-style: utils.custom("border", "style");
			border-width: utils.custom("border", "width");
		}
	}
	&:checked {
		& + label {
			&::before {
				background: utils.custom("border", "color");
			}
			&::after {
				content: "";
				position: absolute;
				top: 9px;
				@include utils.breakpoint(md) {
					top: 10px;
				}
				left: 5px;
				background-color: utils.preset("color", "background");
				border-radius: 50%;
				height: 10px;
				width: 10px;
			}
		}
	}
	&:focus,
	&:focus-visible {
		& + label {
			&:before {
				outline: utils.preset("color", "background") solid
					utils.custom("border", "width");
				box-shadow: 1px 1px 8px utils.preset("color", "secondary");
			}
		}
	}
	&:disabled {
		& + label {
			&::before {
				@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
					backdrop-filter: brightness(0.95);
				}
				border-color: transparent;
			}
		}
	}
}

input[type="submit"],
input[type="reset"],
input[type="button"],
button:not(.components-button):not(.link-button) {
	background-color: utils.custom("button", "color--background");
	border-radius: utils.custom("button", "border--radius");
	border-color: utils.custom("button", "border--color");
	border-width: utils.custom("button", "border--width");
	color: utils.custom("button", "color--text");
	@include utils.padding(
		utils.custom("button", "spacing--padding--top"),
		utils.custom("button", "spacing--padding--right"),
		utils.custom("button", "spacing--padding--bottom"),
		utils.custom("button", "spacing--padding--left")
	);
	&:hover {
		background-color: utils.custom("button", "hover--color--background");
		color: utils.custom("button", "hover--color--text");
	}
	&:focus {
		background-color: utils.custom("button", "focus--color--background");
		color: utils.custom("button", "focus--color--text");
		border-color: utils.custom("button", "focus--border--color");
	}
}
