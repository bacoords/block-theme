@use "../abstracts/props.scss";
@use "../utilities/visually-hidden.scss" as *;
@use "../abstracts/breakpoint-mixin" as *;
input,
textarea {
	transition: props.ref("custom.effects.transition");
	border-radius: props.ref("custom.border.radius");
	border-color: props.ref("custom.border.color");
	border-style: props.ref("custom.border.style");
	border-width: props.ref("custom.border.width");
	padding-top: props.ref("custom.button.spacing.padding.top");
	padding-right: props.ref("custom.button.spacing.padding.right");
	padding-bottom: props.ref("custom.button.spacing.padding.bottom");
	padding-left: props.ref("custom.button.spacing.padding.left");
	&:focus {
		outline: props.ref("custom.forms.focus.outline");
		border-radius: props.ref("custom.border.focus.radius");
		border-color: props.ref("custom.border.focus.color");
		border-style: props.ref("custom.border.focus.style");
		border-width: props.ref("custom.border.focus.width");
	}
}

input[type="checkbox"],
input[type="radio"] {
	accent-color: props.ref("preset.color.foreground");
}

/// Accessible pseudo checkboxes with a focus state
input[type="checkbox"] {
	position: absolute;
	margin: 0 !important;
	padding: 0 !important;
	opacity: 0;
	height: 0;
	width: 0;
	pointer-events: none;
	& + label {
		position: relative;
		cursor: pointer;
		display: flex;
		line-height: 1.6;
		&::before {
			content: "";
			flex-shrink: 0;
			top: calc((1em * 1.6 - 20px) / 2);
			position: relative;
			display: inline-block;
			margin-right: 10px;
			width: 20px;
			height: 20px;
			background: transparent;
			border-radius: props.ref("custom.border.radius");
			border-color: props.ref("custom.border.color");
			border-style: props.ref("custom.border.style");
			border-width: props.ref("custom.border.width");
		}
	}
	&:checked {
		& + label {
			&::before {
				background: props.ref("custom.border.color");
			}
			&::after {
				content: "";
				position: absolute;
				top: 10px;
				left: 4px;
				border-left: props.ref("custom.border.width") solid
					props.ref("preset.color.background");
				border-bottom: props.ref("custom.border.width") solid
					props.ref("preset.color.background");
				height: 6px;
				width: 13px;
				transform: rotate(-45deg);
			}
		}
	}
	&:focus,
	&:focus-visible {
		& + label {
			&:before {
				outline: props.ref("preset.color.background") solid
					props.ref("custom.border.width");
				box-shadow: 1px 1px 8px props.ref("preset.color.secondary");
			}
		}
	}
	&:disabled {
		& + label {
			&::before {
				@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
					backdrop-filter: brightness(0.95);
				}
				border-color: transparent;
			}
		}
	}
}

/// Accessible pseudo radio buttons with a focus state
input[type="radio"] {
	position: absolute;
	margin: 0 !important;
	padding: 0 !important;
	opacity: 0;
	height: 0;
	width: 0;
	pointer-events: none;
	& + label {
		position: relative;
		cursor: pointer;
		display: flex;
		line-height: 1.6;
		&::before {
			content: "";
			flex-shrink: 0;
			top: calc((1em * 1.6 - 20px) / 2);
			position: relative;
			display: inline-block;
			margin-right: 10px;
			width: 20px;
			height: 20px;
			background: transparent;
			border-radius: 50%;
			border-color: props.ref("custom.border.color");
			border-style: props.ref("custom.border.style");
			border-width: props.ref("custom.border.width");
		}
	}
	&:checked {
		& + label {
			&::before {
				background: props.ref("custom.border.color");
			}
			&::after {
				content: "";
				position: absolute;
				top: 9px;
				@include breakpoint(md) {
					top: 10px;
				}
				left: 5px;
				background-color: props.ref("preset.color.background");
				border-radius: 50%;
				height: 10px;
				width: 10px;
			}
		}
	}
	&:focus,
	&:focus-visible {
		& + label {
			&:before {
				outline: props.ref("preset.color.background") solid
					props.ref("custom.border.width");
				box-shadow: 1px 1px 8px props.ref("preset.color.secondary");
			}
		}
	}
	&:disabled {
		& + label {
			&::before {
				@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
					backdrop-filter: brightness(0.95);
				}
				border-color: transparent;
			}
		}
	}
}

input[type="submit"],
input[type="reset"],
input[type="button"],
button:not(.components-button):not(.link-button) {
	background-color: props.ref("custom.button.color.background");
	border-radius: props.ref("custom.button.border.radius");
	border-color: props.ref("custom.button.border.color");
	border-width: props.ref("custom.button.border.width");
	color: props.ref("custom.button.color.text");
	padding-top: props.ref("custom.button.spacing.padding.top");
	padding-right: props.ref("custom.button.spacing.padding.right");
	padding-bottom: props.ref("custom.button.spacing.padding.bottom");
	padding-left: props.ref("custom.button.spacing.padding.left");
	&:hover {
		background-color: props.ref("custom.button.hover.color.background");
		color: props.ref("custom.button.hover.color.text");
	}
	&:focus {
		background-color: props.ref("custom.button.focus.color.background");
		color: props.ref("custom.button.focus.color.text");
		border-color: props.ref("custom.button.focus.border.color");
	}
}
