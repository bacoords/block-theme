@use "../abstracts/mixins.scss";
@use "../abstracts/props.scss";
@use "flow.scss" as *;

.container {
	max-width: props.theme("custom.content-sizes.default");
	@include mixins.margin-x(auto);
}

.container-wide {
	max-width: props.theme("custom.content-sizes.wide");
	@include mixins.margin-x(auto);
}

.container-full {
	max-width: props.theme("custom.content-sizes.full");
	@include mixins.margin-x(auto);
}

.blocks-alignment {
	@extend .flow;
	padding-right: props.theme("style.root.padding-right");
	padding-left: props.theme("style.root.padding-left");
	& > *, .is-layout-flow > * {
		@include mixins.margin-x(auto);
		max-width: props.theme("custom.content-sizes.default");
		&:where(.alignfull) {
			margin-right: calc( props.theme("style.root.padding-right") * -1 );
			margin-left: calc( props.theme("style.root.padding-left") * -1 );
			max-width: calc( 100% + props.theme("style.root.padding-right") + props.theme("style.root.padding-left") );
		}
		&:where(.alignwide) {
			max-width: props.theme("custom.content-sizes.wide");
		}
		&:where(.alignleft) {
			margin-left: 0;
			float: left;
			margin-right: props.theme("style.block-gap");
		}
		&:where(.alignright) {
			margin-right: 0;
			float: right;
			margin-left: props.theme("style.block-gap");
		}
	}
	.is-layout-flow > * {
		padding-right: props.theme("style.root.padding-right");
		padding-left: props.theme("style.root.padding-left");
	}
}