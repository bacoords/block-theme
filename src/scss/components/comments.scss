@use "../utilities/flow.scss" as *;
@use "../abstracts";
@use "sass:color";

#comments {
	padding: abstracts.style("root", "padding-top")
		abstracts.style("root", "padding-left") abstracts.style("root", "padding-bottom")
		abstracts.style("root", "padding-right");
	max-width: abstracts.custom("content-sizes", "wide");
	@include abstracts.margin-x(auto);
	@extend .flow;
	.comments-title {
		text-align: center;
	}
	small {
		display: block;
	}
	.comment-list {
		@extend .flow;
		list-style: none;
		padding: 0;
		.children {
			@extend .flow;
			list-style: none;
			.children {
				ol {
					padding: 0;
				}
			}
		}
		.comment {
			@extend .flow;
			// threaded reply form should have the same background as a comment block
			#respond, .comment-body {
				@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {
					// backdrop-filter: brightness(0.95);
				}
			}
			#respond {
				border-radius: var(--wp--custom--border--radius);
				border-radius: abstracts.custom("border", "radius");
				border-color: abstracts.custom("border", "color");
				border-style: abstracts.custom("border", "style");
				border-width: abstracts.custom("border", "width");
				padding: abstracts.style("root", "padding-top")
				abstracts.style("root", "padding-left") abstracts.style("root", "padding-bottom")
				abstracts.style("root", "padding-right");
			}
			.comment-body {
				border-radius: var(--wp--custom--border--radius);
				border-radius: abstracts.custom("border", "radius");
				border-color: abstracts.custom("border", "color");
				border-style: abstracts.custom("border", "style");
				border-width: abstracts.custom("border", "width");
				padding: abstracts.style("root", "padding-top")
					abstracts.style("root", "padding-left")
					abstracts.style("root", "padding-bottom")
					abstracts.style("root", "padding-right");
				.comment-meta {
					display: flex;
					flex-direction: column;
					justify-content: space-between;
					flex-wrap: wrap;
					margin-bottom: 1rem;
					gap: 0.5rem;
					@include abstracts.breakpoint(md) {
						flex-direction: row;
					 }

					.comment-author {
						display: flex;
						gap: 0.5rem;
						order: 1;
						@include abstracts.breakpoint(md) {
							order: 0;
						}
					}
					.comment-metadata {
						font-size: abstracts.preset("font-size", "small");
					}
				}
			}
		}
	}

	/// Comment Form
	#respond {
		.required-field-message {
			display: block;
			font-size: abstracts.preset("font-size", "small");
			margin-top: abstracts.preset("spacing", "sm");
		}
		form {
			@extend .flow;
			p {
				display: flex;
				flex-direction: column;
				@extend .flow;
				& > * {
					--wp--style--block-gap: 0.5rem;
				}
				&.comment-form-cookies-consent {
					flex-direction: row;
					align-items: baseline;
					gap: 0.5rem;
					& > * + * {
						margin-top: 0;
					}
				}
				&.form-submit {
					// don't make the submit button full width
					display: block;
				}
				&.logged-in-as {
					display: block;
					margin-top: abstracts.preset("spacing", "sm");
				}
			}
			.comment-notes {
				font-size: abstracts.preset("font-size", "small");
				margin-top: abstracts.style("block-gap");
			}
		}
	}
}
